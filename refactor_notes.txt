
  
  function getShifts(event) {
    const start = getDateObj(userInput.startTime);
    const end = getDateObj(userInput.endTime);

    const diffInMilliseconds = Math.abs(end - start);
    const offset = diffInMilliseconds / userInput.staffNumber;

    let times = generateTimes(start, end, offset);
    let shifts = generateShifts(times);

    props.onCalc(shifts);
    event.preventDefault();
  }


// converts time input to date object
  function getDateObj(time) {
    let dObj = new Date(); // creates a Date Object using the clients current time
    let [hours, minutes] = time.split(":"); // using ES6 destructuring
    dObj.setHours(+hours); // set the hours, using implicit type coercion
    dObj.setMinutes(minutes, 0, 0); // you can pass Number or String, it doesn't really matter
    return dObj;
  }  


function getShiftLength(dateObjStart, dateObjEnd) {
    const length = new Date(dateObjEnd - dateObjStart);
    return length.getMinutes();
  }


  function generateTimes(start, end, offset) {
    let timesArray = [];
    let shiftTime = new Date(start.getTime());
    do {
      timesArray.push(shiftTime);
      shiftTime = new Date(shiftTime.getTime() + offset);
    } while (shiftTime <= end);
    return timesArray;
  }

function generateShifts(timesArray) {
    let shiftArray = [];
    let shiftStart, shiftEnd, shiftLength;

    for (let i = 0; i < timesArray.length; i++) {
      shiftStart = timesArray[i];
      if (i === timesArray.length - 1) {
        break;
      } else {
        shiftEnd = timesArray[i + 1];
      }
      shiftStart = Math.round(new Date(shiftStart.getTime() / 300000) * 300000);
      shiftEnd = Math.round(new Date(shiftEnd.getTime() / 300000) * 300000);

      shiftLength = getShiftLength(shiftStart, shiftEnd);

      let shiftStartString = new Date(shiftStart).toLocaleTimeString();
      let shiftEndString = new Date(shiftEnd).toLocaleTimeString();

      let shift = shiftStartString + " - " + shiftEndString;

      shiftArray.push([shift, shiftLength]);
      shiftStart = shiftEnd;
    }
    return shiftArray;
  }



